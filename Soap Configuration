===============================SOAP=======================================

=> At the start of the project you need a xsd/wsdl file for generating classes.
=> Then you need a dependency and a plugin into pom.xml

====================THIS PART IS DONE FOR THE XSD FILE====================
DEPENDENCY:

<dependency>
	<groupId>wsdl4j</groupId>
	<artifactId>wsdl4j</artifactId>
	<version>1.6.2</version>
</dependency>

PLUGIN:

<plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>jaxb2-maven-plugin</artifactId>
	<version>1.6</version>
	<executions>
		<execution>
			<id>xjc</id>
				<goals>
					<goal>xjc</goal>
				</goals>
		</execution>
	</executions>
		<configuration>
			<schemaDirectory>${project.basedir}/src/main/resources/</schemaDirectory>
			<outputDirectory>${project.basedir}/src/main/java</outputDirectory>
			<clearOutputDir>false</clearOutputDir>
		</configuration>
</plugin>

====================FOR GENERATING CLASSES FROM WSDL FILE===================

<plugin>
	<groupId>org.jvnet.jaxb2.maven2</groupId>
	<artifactId>maven-jaxb2-plugin</artifactId>
	<version>0.14.0</version>
		<executions>
			<execution>
				<goals>
					<goal>generate</goal>
				</goals>
			</execution>
		</executions>
			<configuration>
				<schemaLanguage>WSDL</schemaLanguage>
				<generateDirectory>${project.basedir}/src/main/java</generateDirectory>
				<schemaDirectory>${project.basedir}/src/main/resources</schemaDirectory>
					<schemaIncludes>
						<include>ADD WSDL FILE NAME</include>
					</schemaIncludes>
			</configuration>
</plugin>

=============================================================================

Now for generating a wsdl file from the xsd. we need SOAP configuration file.

In it we need a dependecny for SPRING WS CORE

DEPENDENCY:
<dependency>
	<groupId>org.springframework.ws</groupId>
	<artifactId>spring-ws-core</artifactId>
	<version>3.0.9.RELEASE</version>
</dependency>


SOAP CONFIGURATION FILE:

@EnableWs
@Configuration
@ComponentScan
public class SoapConfig extends WsConfigurerAdapter {
    @Bean
    public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {
        MessageDispatcherServlet servlet = new MessageDispatcherServlet();
        servlet.setApplicationContext(applicationContext);
        servlet.setTransformWsdlLocations(true);
        return new ServletRegistrationBean(servlet, "/vassb/*");
    }

    @Bean(name ="vas")
    public DefaultWsdl11Definition defaultWsdl11Definition(XsdSchema userSchema) {
        DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition();
        wsdl11Definition.setPortTypeName("vasSB");
        wsdl11Definition.setLocationUri("/vassb");
        wsdl11Definition.setSchema(userSchema);
        return wsdl11Definition;
    }

    @Bean
    public XsdSchema userSchema() {
        return new SimpleXsdSchema(new ClassPathResource("ZongReverse.xsd"));
    }
}


=====================================NOTE========================================

IF you get error in "return new ServletRegistrationBean(servlet, "/vassb/*")" ADD BELOW DEPENDENCY

<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>servlet-api</artifactId>
    <version>2.5</version>
    <scope>provided</scope>
</dependency>


URL FOR THE GENERATING WSDL FORM XSD WILL BE: 

http://localhost:8081/vassb/user.wsdl

(HERE I HAVE CHANGED THE SERVER.PORT TO 8081)
